import cv2
import numpy as np
import matplotlib.pyplot as plt
# Load the image
image_path = "/mnt/data/image.png"
img = cv2.imread(image_path)

# Convert to grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# 1. Inverse Transformation
inverse_img = cv2.bitwise_not(gray)

# 2. Contrast Stretching
min_val, max_val = np.min(gray), np.max(gray)
contrast_stretched = ((gray - min_val) / (max_val - min_val) * 255).astype(np.uint8)

# 3. Histogram Equalization
hist_eq = cv2.equalizeHist(gray)

# 4. Edge Detection (Canny)
edges = cv2.Canny(gray, 100, 200)

# Display all results
fig, axes = plt.subplots(1, 5, figsize=(20, 5))

axes[0].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
axes[0].set_title("Original Image")
axes[0].axis("off")

axes[1].imshow(inverse_img, cmap="gray")
axes[1].set_title("Inverse Transformation")
axes[1].axis("off")

axes[2].imshow(contrast_stretched, cmap="gray")
axes[2].set_title("Contrast Stretched")
axes[2].axis("off")

axes[3].imshow(hist_eq, cmap="gray")
axes[3].set_title("Histogram Equalization")
axes[3].axis("off")

axes[4].imshow(edges, cmap="gray")
axes[4].set_title("Edge Detection (Canny)")
axes[4].axis("off")

plt.show()

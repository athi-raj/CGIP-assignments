import cv2
import zipfile
import numpy as np
from matplotlib import pyplot as plt

# Assuming the image is named "sample.jpg" and is in a zip file named "data.zip"
with zipfile.ZipFile("data.zip", 'r') as zip_ref:
    zip_ref.extractall("")

image_path = "sample.jpg"  # Replace with actual image name
img = cv2.imread(image_path)

# Check if the image is loaded correctly
if img is None:
    print("Error: Image not found or failed to load.")
else:
    # 1. Print Image Shape & Size
    print(f"Image Shape: {img.shape}")  # (Height, Width, Channels)
    print(f"Image Size: {img.size} pixels")

    # 2. Convert to Grayscale & Binary
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # Convert to Binary using Thresholding
    _, binary = cv2.threshold(gray, 127, 255, cv2.THRESH_BINARY)

    # 3. Scale Down the Image (Resize to 50% of original size)
    scale_percent = 50  # Resize to 50%
    width = int(img.shape[1] * scale_percent / 100)
    height = int(img.shape[0] * scale_percent / 100)
    resized_img = cv2.resize(img, (width, height), interpolation=cv2.INTER_AREA)

    # 4. Remove Noise using Gaussian & Median Filters
    gaussian_blur = cv2.GaussianBlur(gray, (5, 5), 0)
    median_blur = cv2.medianBlur(gray, 5)

    # Display All Results
    fig, axes = plt.subplots(2, 3, figsize=(15, 10))

    axes[0, 0].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
    axes[0, 0].set_title("Original Image")
    axes[0, 0].axis("off")

    axes[0, 1].imshow(gray, cmap="gray")
    axes[0, 1].set_title("Grayscale Image")
    axes[0, 1].axis("off")

    axes[0, 2].imshow(binary, cmap="gray")
    axes[0, 2].set_title("Binary Image")
    axes[0, 2].axis("off")

    axes[1, 0].imshow(cv2.cvtColor(resized_img, cv2.COLOR_BGR2RGB))
    axes[1, 0].set_title("Scaled Down Image")
    axes[1, 0].axis("off")

    axes[1, 1].imshow(gaussian_blur, cmap="gray")
    axes[1, 1].set_title("Gaussian Blur (Noise Removal)")
    axes[1, 1].axis("off")

    axes[1, 2].imshow(median_blur, cmap="gray")
    axes[1, 2].set_title("Median Blur (Noise Removal)")
    axes[1, 2].axis("off")

    plt.show()
